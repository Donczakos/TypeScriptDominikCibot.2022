{"version":3,"sources":["tsc/search.ts","tsc/getWeather.ts","tsc/weather.ts","tsc/app.ts"],"names":[],"mappings":"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","file":"app.d968f5c2.js","sourceRoot":"..","sourcesContent":["import {InterfaceSearch} from \"./interface/interfaceSearch\"\r\n\r\nexport class Search implements  InterfaceSearch {\r\n    private _city: string = \"\";\r\n\r\n    constructor() {\r\n        this.searchCity()\r\n    }\r\n    searchCity() {\r\n        this._city = (document.querySelector(\".inputCity\") as HTMLInputElement).value\r\n    }\r\n    get city(): string {\r\n        return this._city;\r\n    }\r\n}","export class GetWeather {\r\n    city: string = \"\"\r\n    time: number = this.countTime(2)\r\n\r\n    constructor(city: string) {\r\n        this.city = city;\r\n        this.settingApi(city)\r\n        this.refresh(localStorage.getItem(\"city\") as string)\r\n    }\r\n    // 3901c785d0664e444c3126d8e4fe8e8d\r\n    countTime(time: number): number {\r\n        return time * 60 * 1000\r\n    }\r\n\r\n    settingApi(city: string) {\r\n        this.apiCity(\"https://api.openweathermap.org/data/2.5/weather?q=\" + this.city + \"&APPID=efa2ef11f117f7485b2fca8e87a3a2f5&units=metric\")\r\n    }\r\n    refresh(city: string) {\r\n        setInterval(() => {\r\n            console.log(city)\r\n            let dataWeather = this.settingApi(city)\r\n        }, this.time)\r\n    }\r\n\r\n    apiCity<T>(url: string): Promise<T> {\r\n        return fetch(url)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText)\r\n                }\r\n                return response.json<T>()\r\n            })\r\n            .then(data => { /* <-- data inferred as { data: T }*/\r\n                this.settingText(data)\r\n                this.chart(data.coord.lon as number, data.coord.lat as number)\r\n                return data\r\n            })\r\n    }\r\n\r\n    apiChart<T>(url: string): Promise<T> {\r\n        return fetch(url)\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText)\r\n                }\r\n                return response.json<T>()\r\n            })\r\n            .then(data => { /* <-- data inferred as { data: T }*/\r\n                console.log(\"data\",data)\r\n                this.printChart(data.hourly as number[])\r\n                return data\r\n            })\r\n    }\r\n\r\n    printChart(hourly: number[]) {\r\n        console.log(hourly)\r\n        let arrayWeather = [];\r\n        let data = new Date().getTime();\r\n        const minute = 1000 * 60;\r\n        const hour = minute * 60;\r\n        arrayWeather = hourly.map((e: any, key) => {\r\n            return \"<tr><td> \" + new Date(data + (hour*key)).getHours() + \"</td><td> \" + e.temp + \" ℃</td><td><img src=\" + this.settingImg(e, false) + \"></td></tr>\"\r\n        });\r\n        arrayWeather.unshift(\"<tr><th>Godzina</th><th>Temperatura</th><th>Grafika</th></tr>\");\r\n        (document.querySelector(\"table\") as HTMLElement).innerHTML = arrayWeather.join(\"\");\r\n    }\r\n\r\n    chart(lon: number, lat: number) {\r\n        console.log(lon, lat)\r\n        const api: string = \"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&exclude=daily,minutely,current,alerts&units=metric&appid=efa2ef11f117f7485b2fca8e87a3a2f5\";\r\n        this.apiChart(api);\r\n    }\r\n    settingText(data: any) {\r\n        (document.querySelector(\".spanCity\") as HTMLSpanElement).innerHTML = data.name;\r\n        (document.querySelector(\".spanHumidity\") as HTMLSpanElement).innerHTML = data.main.humidity + \"%\";\r\n        (document.querySelector(\".spanTemp\") as HTMLSpanElement).innerHTML = data.main.temp + \"℃\";\r\n        (document.querySelector(\".spanPressure\") as HTMLSpanElement).innerHTML = data.main.pressure + \"hPa\";\r\n        this.settingImg(data as Object);\r\n    }\r\n    settingImg(data: any, flag = true) {\r\n        const status = (data.weather[0].main);\r\n        console.log(status)\r\n        let url = \"\";\r\n        switch (status) {\r\n            case \"Clear\":\r\n                url = \"http://openweathermap.org/img/wn/01d@2x.png\"\r\n                break;\r\n            case \"Rain\":\r\n                url = \"http://openweathermap.org/img/wn/10d@2x.png\"\r\n                break;\r\n            case \"Thunderstorm\":\r\n                url = \"http://openweathermap.org/img/wn/11d@2x.png\"\r\n                break;\r\n            case \"Drizzle\":\r\n                url = \"http://openweathermap.org/img/wn/09d@2x.png\"\r\n                break;\r\n            case \"Snow\":\r\n                url = \"http://openweathermap.org/img/wn/13d@2x.png\"\r\n                break;\r\n            case \"Clouds\":\r\n                url = \"http://openweathermap.org/img/wn/02d@2x.png\"\r\n                break;\r\n            default:\r\n                url = \"https://ssl.gstatic.com/onebox/weather/48/sunny.png\"\r\n                break\r\n        }\r\n        //ssl.gstatic.com/onebox/weather/64/rain_light.png\r\n        if (flag) {\r\n            (document.querySelector(\".weatherImg\") as HTMLImageElement).src = url\r\n        }\r\n        else {\r\n            return url;\r\n        }\r\n\r\n    }\r\n}","import { Search } from \"./search\"\r\nimport { GetWeather } from \"./getWeather\"\r\nimport { InterfaceSearch } from \"./interface/interfaceSearch\"\r\n\r\n\r\nexport class Weather {\r\n  search: InterfaceSearch;\r\n  api:any\r\n\r\n  constructor() {\r\n    this.search = new Search();\r\n    this.render(this.search)\r\n  }\r\n  render(search: InterfaceSearch) {\r\n    const button = document.querySelector(\".btn\");\r\n    button?.addEventListener('click', (event) => {\r\n      this.search = new Search();\r\n       this.api = new GetWeather(this.search.city as string)\r\n       this.showApp()\r\n      localStorage.setItem(\"city\", this.search.city as string );\r\n    })\r\n    if(typeof(localStorage.getItem(\"city\")) === \"string\"){\r\n      this.showApp()\r\n      this.api = new GetWeather(this.search.city as string)\r\n    }\r\n  }\r\n  showApp(){\r\n    (document.querySelector(\".app\") as HTMLElement).style.display = \"block\"\r\n  }\r\n  //odświerzanie \r\n}","import {Weather} from \"./weather\"\r\n\r\nlet app = new Weather();\r\n\r\n\r\n\r\n\r\n//   let dataWeather = api(\"https://api.openweathermap.org/data/2.5/weather?q=Katowice&APPID=efa2ef11f117f7485b2fca8e87a3a2f5&units=metric\")\r\n\r\n//   console.log(dataWeather)"]}